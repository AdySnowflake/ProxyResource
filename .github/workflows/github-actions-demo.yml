# name: GitHub Actions Demo
# run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
# on: [push]
# jobs:
#   Explore-GitHub-Actions:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
#       - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
#       - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
#       - name: Check out repository code
#         uses: actions/checkout@v4
#       - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
#       - run: echo "🖥️ The workflow is now ready to test your code on the runner."
#       - name: List files in the repository
#         run: |
#           ls ${{ github.workspace }}
#       - run: echo "🍏 This job's status is ${{ job.status }}."


name: Sync Rule-List File
run-name: "🚀 File Sync Triggered"

on:
  push:
    paths:
      - 'Rule/Clash/My-Proxy.list'  # 仅监听 clash 目录下的 list 文件
    branches:
      - main  # 只在 main 分支上触发

jobs:
  sync-list:
    runs-on: ubuntu-latest

    steps:
      - name: 📂 Check out repository code
        uses: actions/checkout@v4

      - run: echo "🎉 Workflow triggered by ${{ github.event_name }} event."
      - run: echo "🐧 Running on ${{ runner.os }} server."
      - run: echo "🔎 Repository: ${{ github.repository }} | Branch: ${{ github.ref }}"

      - name: 🔄 Sync rule-list file to loon
        run: |
          cp Rule/Clash/My-Proxy.list Rule/Loon/My-Proxy.list  # 如果 Rule/Loon/ 不存在，这里会直接报错
          echo "✅ Successfully copied Rule/Clash/My-Proxy to Rule/Loon/My-Proxy."

      - name: 🚀 Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          git add rule/loon/list
          git commit -m "🔄 Auto-sync list file [bot]" || exit 0  # 如果没有改动就跳过提交
          git push
          echo "✅ Changes pushed successfully!"

      - run: echo "🍏 Workflow execution completed with status: ${{ job.status }}."
